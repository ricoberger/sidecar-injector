# Default values for sidecar-injector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

replicas: 1

## Specify a list of image pull secrets, to avoid the DockerHub rate limit or to pull the sidecar-injector image from a
## private registry.
## See: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##
imagePullSecrets: []
  # - name: regcred

## Specify security settings for the created Pods. To set the security settings for the sidecar-injector Container use
## the corresponding "securityContext" field.
## See: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
##
podSecurityContext: {}
  # fsGroup: 2000

## Specify a map of key-value pairs, to assign the Pods to a specific set of nodes.
## See: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
##
nodeSelector: {}

## Specify the tolerations for the sidecar-injector Pods.
## See: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
##
tolerations: []

## Specify a node affinity or inter-pod affinity / anti-affinity for an advanced scheduling of the
## sidecar-injector Pods.
## See: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Specify additional labels and annotations for the created Pods.
##
pod:
  annotations: {}
  labels: {}

image:
  repository: ricoberger/sidecar-injector
  tag: v0.8.1
  pullPolicy: IfNotPresent

## Specify security settings for the sidecar-injector Container. They override settings made at the Pod level via the
## "podSecurityContext" when there is overlap.
## See: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
##
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## We usually recommend not to specify default resources and to leave this as a conscious choice for the user. This
## also increases chances charts run on environments with little resources, such as Minikube. If you do want to
## specify resources, uncomment the following lines, adjust them as necessary, and remove the curly braces after
## 'resources:'.
##
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## Specify additional environment variables for the sidecar-injector container.
##
env: []

## Specify the commandline arguments for the sidecar-injector container.
##
## The "--certs" and "--config" arguments are required and should not be changed. Additionally you can customize the
## logging behavior via the following arguments:
##   --zap-devel                         Development Mode defaults(encoder=consoleEncoder,logLevel=Debug,stackTraceLevel=Warn). Production Mode defaults(encoder=jsonEncoder,logLevel=Info,stackTraceLevel=Error)
##   --zap-encoder encoder               Zap log encoding (one of 'json' or 'console')
##   --zap-log-level level               Zap Level to configure the verbosity of logging. Can be one of 'debug', 'info', 'error', or any integer value > 0 which corresponds to custom debug levels of increasing verbosity
##   --zap-stacktrace-level level        Zap Level at and above which stacktraces are captured (one of 'info', 'error', 'panic').
##   --zap-time-encoding time-encoding   Zap time encoding (one of 'epoch', 'millis', 'nano', 'iso8601', 'rfc3339' or 'rfc3339nano'). Defaults to 'epoch'.
##
args:
  - --certs=/webhook/certs
  - --config=/webhook/config.yaml

## Set the content of the config.yaml file, which is used by the sidecar-injector container.
##
config: |
  containers: []
  volumes: []
  environmentVariables: []

## Set annotations and labels for the created service.
##
service:
  annotations: {}
  labels: {}

## Specifies if PodDisruptionBudget should be enabled
## See: https://kubernetes.io/docs/tasks/run-application/configure-pdb
##
podDisruptionBudget: {}
  # maxUnavailable: 1

## Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in.
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
##
topologySpreadConstraints: []
  # - maxSkew: 1
  #   topologyKey: topology.kubernetes.io/zone
  #   whenUnsatisfiable: DoNotSchedule
  #   labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/name: sidecar-injector

## Limit which requests for namespaced resources are intercepted by the sidecar-injector, based on the labels of the
## containing namespace.
## Ref: https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-namespaceselector
##
namespaceSelector: {}
  # matchLabels:
  #   sidecar-injector.ricoberger.de: enabled
